@using ToolShare.Data.Models
<h4> Tools You Own </h4>

<QuickGrid class="table" Items="@filteredOwnedTools" Pagination="@pagination">
    <TemplateColumn Context="tool" Title="Photo">
        <img src="@tool.ToolPhotoUrl" alt ="picture of the tool" width="50px"/>
    </TemplateColumn>
    <PropertyColumn Property="tool => tool.Name" Title="Name" Sortable="true">
        <ColumnOptions>
            <div class="search-box">
                <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Tool name..." />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="tool => tool.ToolStatus" Title="Status">
        <ColumnOptions>
            <div class="selection-menu">
                <select @bind="statusFilter" @bind:event="onchange">
                    <option value="">--Please choose an option--</option>
                    <option value="Available">Available</option>
                    <option value="Borrowed">Borrowed</option>
                    <option value="Requested">Requested</option>
                    <option value="ReturnPending">Return Pending</option>
                </select>
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="tool => tool.ToolRequesterName" Title="Requester"/>
    <PropertyColumn Property="tool => tool.ToolBorrowerName" Title="Borrower"/>
    <PropertyColumn Property="tool => tool.BorrowingPeriodInDays" Title="Loan Period"/>
    <TemplateColumn Context="tool" Title="Details" >
        <a class="nav-link" href="tool-detail/@tool.ToolId">Click Here</a>
    </TemplateColumn>
    <TemplateColumn Context="tool" Title="Actions">
        @switch (tool.ToolStatus)
        {
            case ToolStatus.Available:
                <button @onclick="async () => await HandleDeleteClick(tool.ToolId)">Delete</button>
                break;
            case ToolStatus.Borrowed:
                break;
            case ToolStatus.Requested:
                <button @onclick="async () => await HandleAcceptClick(tool.ToolId)">Accept</button>
                break;
            case ToolStatus.ReturnPending:
                <button @onclick="async () => await HandleMarkReturnClick(tool.ToolId)">Mark Returned</button>
                break;
        }

    </TemplateColumn>
</QuickGrid>
<Paginator State="pagination"/>