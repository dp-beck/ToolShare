@page "/login"
@layout EmptyLayout
@using ToolShare.UI.Identity
@attribute [AllowAnonymous]
@inject IAccountManagement Acct

<PageTitle>Tool Share - Log in or Sign Up</PageTitle>

<h1>Welcome to Tool Share!</h1>

<img src="images/logo.png" alt="logo" style="width: 100px;">

<p> An app for making it possible to share your tools with family and friends.
    Say goodbye to misplacing your tools by keeping track of who has what
    and for how long.
</p>
<AuthorizeView>
     <Authorized>
         <HomeRedirect />
     </Authorized>
     <NotAuthorized>
        <div> 
            <p> Welcome back! Sign in to get started! </p>
        </div>
        @if (errors)
        {
            @foreach (var error in errorList)
            {
                <div class="alert alert-danger">@error</div>
            }
        }
        <div class="flex-outer">
            <div>
                <label for="username">
                    Username:
                </label>
                <input required id="username" name="usernameInput" placeholder="Enter your username" type="string" @bind-value="username" />
            </div>
            <div>
                <label for="password">
                    Password:
                </label>
                <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="password" />
            </div>
            <div>
                <button class="btn btn-primary" @onclick="DoLoginAsync">Login</button>
            </div>
        </div>
        <p>Not signed up yet? Head on over to the <NavLink href="register"> Registration Page! </NavLink> </p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool success, errors;
    private string username = string.Empty;
    private string password = string.Empty;
    private string[] errorList = [];

    private async Task DoLoginAsync()
    {
        success = errors = false;
        errorList = [];

        if (string.IsNullOrWhiteSpace(username))
        {
            errors = true;
            errorList = ["Username is required."];

            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errors = true;
            errorList = ["Password is required."];

            return;
        }

        var result = await Acct.LoginAsync(username, password);

        if (result.Succeeded)
        {
            success = true;
            username = password = string.Empty;
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }
}