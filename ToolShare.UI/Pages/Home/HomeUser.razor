@using ToolShare.Data.Models
@using ToolShare.UI.Dtos
@if (!IsLoading)
{
    <MudText Typo="Typo.body1" Class="mt-4 mb-4">You are a member of @UserInfo.PodJoinedName. See any tools you want to borrow?
        Just hit the request button. Feel free to email the tool owner to let them know
        you requested a tool.</MudText>
    
    <MudDataGrid T="ToolDto" Items="@FilteredTools" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@QuickFilter">
        <ToolBarContent>
            <MudText Typo="Typo.h6">@UserInfo.PodJoinedName Tools</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="tool => tool.ToolPhotoUrl" Title="Photo" Sortable="false" Filterable="false">
                <CellTemplate>
                    <MudImage Src="@context.Item.ToolPhotoUrl" alt="picture of the tool" Width="100" Elevation="10"/>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.Name" Title="Name">
                <CellTemplate>
                    <MudLink Href="@($"tool-detail/{context.Item.ToolId}")">@context.Item.Name</MudLink>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.ToolOwnerName" 
                            Title="Tool Owner"/>
            <PropertyColumn Property="tool => tool.BorrowingPeriodInDays" Title="Loan Period (Days)"/>
            <PropertyColumn Property="tool => tool.ToolStatus" Title="Availability">
                <CellTemplate>
                    @switch (context.Item.ToolStatus)
                    {
                        case ToolStatus.Available:
                            <MudText Typo="Typo.body1" Color="Color.Tertiary">Available</MudText>
                            break;
                        case ToolStatus.Borrowed:
                            <MudText Typo="Typo.body1" Color="Color.Secondary">Borrowed</MudText>
                            break;
                        case ToolStatus.Requested:
                            <MudText Typo="Typo.body1" Color="Color.Primary">Requested</MudText>
                            break;
                        case ToolStatus.ReturnPending:
                            <MudText Typo="Typo.body1" Color="Color.Dark">Return Pending</MudText>
                            break;
                        default:
                            <MudText Typo="Typo.body1" Color="Color.Default">@context.Item.ToolStatus</MudText>
                            break;
                    }
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.ToolId" Title="" Sortable="false" Filterable="false">
                <CellTemplate>
                    @if (context.Item.ToolStatus == ToolStatus.Available)
                    {
                        <MudButton OnClick="async () => await HandleRequestClick(context.Item.ToolId)" 
                                   Variant="Variant.Filled" Color="Color.Secondary">Request</MudButton>
                    }
                    @if (context.Item.ToolStatus == ToolStatus.Borrowed)
                    {
                        <MudText Typo="Typo.body1">Date Due: @context.Item.DateDue</MudText>
                    }
                </CellTemplate>
            </PropertyColumn>
        </Columns>
        <PagerContent>
            <MudDataGridPager/>
        </PagerContent>
    </MudDataGrid>
    
}
