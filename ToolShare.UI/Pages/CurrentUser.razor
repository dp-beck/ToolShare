@page "/current-user/"
@using System.ComponentModel.DataAnnotations

@if (!_isLoading)
{
    <MudText Typo="Typo.h3" Align="Align.Center">@UserEditDTO.UserName</MudText>
    <AuthorizeView Roles="NoPodUser">
        <Authorized>
            <MudText Typo="Typo.body1" Align="Align.Center">You are not yet a member of a pod.</MudText>
        </Authorized>
    </AuthorizeView>
    
    <AuthorizeView Roles="User">
        <Authorized>
            <MudText Typo="Typo.body1" Align="Align.Center"> You are a member of the @userInfo.PodJoinedName.</MudText>
            @if (userInfo.PodManagedName == String.Empty)
            {

                <MudText Typo="Typo.body1" Align="Align.Center">You are not the manager of the pod.</MudText>
            }
            else
            {
                <MudText Typo="Typo.body1" Align="Align.Center">You are the manager of the pod.</MudText>
            }
        </Authorized>
    </AuthorizeView>
    
    <MudContainer Class="mx-4">
        <MudImage Src="@userInfo.ProfilePhotoUrl" 
                  Alt="Profile photo of user"
                  Width="150"
                  Class="rounded-circle"
        />
        
        <MudText Typo="Typo.body1" Color="Color.Default">Change any of your details below.
            Please note that if you change your username, you will be logged out and need to log back in.</MudText>

        <MudForm @ref="UserDetailsForm" @bind-IsValid="@validUserDetailsForm" @bind-Errors="@UserDetailsFormErrors" Spacing="6" Class="mt-4">
        <MudTextField @bind-Value="@UserEditDTO.UserName" T="string"
                      Label="Username" Required="true" RequiredError="Username is required!"/>
        <MudTextField @bind-Value="UserEditDTO.FirstName" T="string"
                      Label="First Name"/>
        <MudTextField @bind-Value="UserEditDTO.LastName"
                      Label="Last Name"/>
        <MudTextField @bind-Value="UserEditDTO.Email" T="string" Label="Email" Required="true" RequiredError="Email is required!"
                      Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })"/>
        <MudTextField @bind-Value="UserEditDTO.AboutMe" T="string" Label="About Me" Variant="Variant.Text" Lines="5"/>

        <MudButton OnClick="async () => await HandleEditSubmit()"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   Disabled="@(!validUserDetailsForm)"
                   Class="ml-auto">Submit Changes</MudButton>
        @foreach (var error in UserDetailsFormErrors)
        {
            <MudText Color="@Color.Error">@error</MudText>
        }
    </MudForm>
    
    <MudText Typo="Typo.h4" Class="mt-4">Change Password</MudText>
    
    <MudForm @ref="ChangePasswordForm" @bind-IsValid="@validChangePasswordForm" @bind-Errors="@ChangePasswordFormErrors" Spacing="6" Class="mt-4">
        <MudTextField @bind-Value="@ChangePasswordDto.CurrentPassword" T="string"
                      Label="Current Password" Required="true"
                      InputType="InputType.Password" RequiredError="Current Password is required!"/>
        <MudTextField @bind-Value="ChangePasswordDto.NewPassword" T="string" Label="Password" HelperText="Choose a strong password"
                      InputType="InputType.Password"
                      Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                      RequiredError="Password is required!"/>
        <MudButton OnClick="async () => await HandleChangePassword()"
                   Variant="Variant.Filled"
                   Color="Color.Primary"
                   Disabled="@(!validChangePasswordForm)"
                   Class="ml-auto">Submit Changes</MudButton>
        @foreach (var error in ChangePasswordFormErrors)
        {
            <MudText Color="@Color.Error">@error</MudText>
        }
    </MudForm>

    <MudText Typo="Typo.h4" Class="mt-4">Delete Account</MudText>

         <MudButton Variant="Variant.Filled" 
                    StartIcon="@Icons.Material.Filled.Delete" 
                    Color="Color.Error"
                    @onclick="OnDeleteButtonClick"
                    Class="mt-4 mb-4 ml-4">Delete</MudButton>
    </MudContainer>
}
