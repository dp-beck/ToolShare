@page "/manage-tools"
@using ToolShare.Data.Models
@using ToolShare.UI.Dtos

@if (!_isLoading)
{
    <MudText Typo="Typo.h3" Align="Align.Center">Manage Tools: @userInfo.UserName</MudText>
    
    <MudDataGrid Class="mt-4" T="ToolDto" Items="@ToolsOwned" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@QuickFilterOwnedTools">
        <ToolBarContent>
            <MudText Typo="Typo.h5">Tools You Own</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchStringOwnedTools" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="tool => tool.ToolPhotoUrl" Title="Photo" Sortable="false" Filterable="false">
                <CellTemplate>
                    <MudImage src="@context.Item.ToolPhotoUrl" alt="picture of the tool" Width="100" Elevation="10"/>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.Name" Title="Name">
                <CellTemplate>
                    <MudLink Href="@($"tool-detail/{context.Item.ToolId}")">@context.Item.Name</MudLink>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.ToolStatus" Title="Availability"/>
            <PropertyColumn Property="tool => tool.ToolRequesterName" Title="Requester"/>
            <PropertyColumn Property="tool => tool.ToolBorrowerName" Title="Borrower"/>
            <PropertyColumn Property="tool => tool.BorrowingPeriodInDays" Title="Loan Period (Days)"/>
            <PropertyColumn Property="tool => tool.ToolId" Title="" Sortable="false" Filterable="false">
                <CellTemplate>
                    @switch(context.Item.ToolStatus)
                    {
                        case ToolStatus.Available:
                            <MudButton OnClick="async () => await HandleDeleteClick(context.Item.ToolId)"
                                       Variant="Variant.Filled" Color="Color.Warning">Delete</MudButton>
                            break;
                        case ToolStatus.Borrowed:
                            <MudText Typo="Typo.body1">Due: @context.Item.DateDue</MudText>
                            break;
                        case ToolStatus.Requested:
                            <MudButton OnClick="async () => await HandleAcceptClick(context.Item.ToolId)"
                                       Variant="Variant.Filled" Color="Color.Primary">Lend Tool</MudButton>
                            break;
                        case ToolStatus.ReturnPending:
                            <MudButton OnClick="async () => await HandleAcceptReturnClick(context.Item.ToolId)"
                                       Variant="Variant.Filled" Color="Color.Secondary">Accept Return</MudButton>
                            break;
                    }
                </CellTemplate>
            </PropertyColumn>
        </Columns>
    </MudDataGrid>
    
    <MudDataGrid Class="mt-4" T="ToolDto" Items="@ToolsBorrowed" SortMode="SortMode.Multiple" Filterable="true" QuickFilter="@QuickFilterBorrowedTools">
        <ToolBarContent>
            <MudText Typo="Typo.h5">Tools You've Borrowed</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchStringBorrowedTools" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="tool => tool.ToolPhotoUrl" Title="Photo" Sortable="false" Filterable="false">
                <CellTemplate>
                    <MudImage src="@context.Item.ToolPhotoUrl" alt="picture of the tool" Width="100" Elevation="10"/>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.Name" Title="Name">
                <CellTemplate>
                    <MudLink Href="@($"tool-detail/{context.Item.ToolId}")">@context.Item.Name</MudLink>
                </CellTemplate>
            </PropertyColumn>
            <PropertyColumn Property="tool => tool.ToolOwnerName" Title="Borrower"/>
            <PropertyColumn Property="tool => tool.BorrowingPeriodInDays" Title="Loan Period (Days)"/>
            <PropertyColumn Property="tool => tool.DateDue" Title="Date Due"/>
            <PropertyColumn Property="tool => tool.ToolStatus" Title="Tool Status"/>
            <PropertyColumn Property="tool => tool.ToolId" Title="" Sortable="false" Filterable="false">
                <CellTemplate>
                    @if(context.Item.ToolStatus == ToolStatus.Borrowed)
                    {
                            <MudButton OnClick="async () => await HandleRequestReturnClick(context.Item.ToolId)"
                                       Variant="Variant.Filled" Color="Color.Tertiary">Request Return</MudButton>
                    }
                </CellTemplate>
            </PropertyColumn>
        </Columns>
    </MudDataGrid>

}
